/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => CustomFileClass
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var CustomFileClass = class extends import_obsidian.Plugin {
  async onload() {
    console.log("---------- Custom File Classes Obsidian loading ----------");
    if (!this.app.plugins.enabledPlugins.has("dataview") || this.app.plugins.plugins["dataview"] && !this.app.plugins.plugins["dataview"].settings.enableDataviewJs) {
      new import_obsidian.Notice(`------------------------------------------
(!) INFO (!) 
Install and enable dataview and dataviewJS for extra Metadata Menu features
------------------------------------------`, 6e4);
    }
  }
  async loadSettings() {
  }
  async saveSettings() {
  }
  onunload() {
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgTm90aWNlLCBQbHVnaW4gfSBmcm9tICdvYnNpZGlhbic7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEN1c3RvbUZpbGVDbGFzcyBleHRlbmRzIFBsdWdpbiB7XG5cblx0YXN5bmMgb25sb2FkKCk6IFByb21pc2U8dm9pZD5cblx0e1xuXHRcdGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLSBDdXN0b20gRmlsZSBDbGFzc2VzIE9ic2lkaWFuIGxvYWRpbmcgLS0tLS0tLS0tLVwiKTtcblx0XHRcblx0XHRpZiAoIXRoaXMuYXBwLnBsdWdpbnMuZW5hYmxlZFBsdWdpbnMuaGFzKFwiZGF0YXZpZXdcIikgfHwgKFxuXHRcdFx0Ly9AdHMtaWdub3JlXG5cdFx0XHR0aGlzLmFwcC5wbHVnaW5zLnBsdWdpbnNbXCJkYXRhdmlld1wiXSAmJiAhdGhpcy5hcHAucGx1Z2lucy5wbHVnaW5zW1wiZGF0YXZpZXdcIl0uc2V0dGluZ3MuZW5hYmxlRGF0YXZpZXdKcylcblx0XHQpIHtcblx0XHRcdG5ldyBOb3RpY2UoXG5cdFx0XHRcdGAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cXG5gICtcblx0XHRcdFx0YCghKSBJTkZPICghKSBcXG5gICtcblx0XHRcdFx0YEluc3RhbGwgYW5kIGVuYWJsZSBkYXRhdmlldyBhbmQgZGF0YXZpZXdKUyBmb3IgZXh0cmEgTWV0YWRhdGEgTWVudSBmZWF0dXJlc1xcbmAgK1xuXHRcdFx0XHRgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tYCwgNjAwMDApXG5cdFx0fVxuXHR9XG5cblx0Lypcblx0LS0tLS0tLS0tLS0tXG5cdFNldHRpbmdzXG5cdC0tLS0tLS0tLS0tLVxuXHQqL1xuXG5cdGFzeW5jIGxvYWRTZXR0aW5ncygpIHt9O1xuXG5cdGFzeW5jIHNhdmVTZXR0aW5ncygpIHt9O1xuXG5cdG9udW5sb2FkKCkge307XG59XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBQStCO0FBRS9CLElBQXFCLGtCQUFyQixjQUE2Qyx1QkFBTztBQUFBLEVBRW5ELE1BQU0sU0FDTjtBQUNDLFlBQVEsSUFBSSw0REFBNEQ7QUFFeEUsUUFBSSxDQUFDLEtBQUssSUFBSSxRQUFRLGVBQWUsSUFBSSxVQUFVLEtBRWxELEtBQUssSUFBSSxRQUFRLFFBQVEsZUFBZSxDQUFDLEtBQUssSUFBSSxRQUFRLFFBQVEsWUFBWSxTQUFTLGtCQUN0RjtBQUNELFVBQUksdUJBQ0g7QUFBQTtBQUFBO0FBQUEsNkNBRzhDLEdBQUs7QUFBQSxJQUNyRDtBQUFBLEVBQ0Q7QUFBQSxFQVFBLE1BQU0sZUFBZTtBQUFBLEVBQUM7QUFBQSxFQUV0QixNQUFNLGVBQWU7QUFBQSxFQUFDO0FBQUEsRUFFdEIsV0FBVztBQUFBLEVBQUM7QUFDYjsiLAogICJuYW1lcyI6IFtdCn0K
